name: "CodeQL"

on:
  push:
    branches: [ "main", "default-pattern" ]
  pull_request:
    branches: [ "main", "default-pattern" ]
  schedule:
    - cron: '33 10 * * 5'

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag docker.io/mlsh/secure-chat:latest

  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    needs: build
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: c-cpp
          build-mode: manual

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y \
        git \
        g++ \
        gcc \
        make \
        wget \
        cmake \
        sqlite3 \
        libz-dev \
        xorg-dev \
        libc6-dev \
        libxi-dev \
        libssl-dev \
        libuv1-dev \
        libx11-dev \
        libxrandr-dev \
        libsqlite3-dev \
        netcat-openbsd \
        libasound2-dev \
        libwayland-dev \
        build-essential \
        mesa-common-dev \
        libgl1-mesa-dev \
        libglu1-mesa-dev \
        libcurl4-openssl-dev

        git clone https://github.com/raysan5/raylib.git raylib
        cd raylib/src
        make PLATFORM=PLATFORM_DESKTOP
        sudo make install
        cd ../../

        make
        exit 0

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
